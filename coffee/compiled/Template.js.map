{
  "version": 3,
  "file": "Template.js",
  "sourceRoot": "../..",
  "sources": [
    "coffee/Template.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;EAEA;AAFA,MAAA,CAAA,EAAA,EAAA,EAAA;;EAIA,IAAA,GAAO,OAAA,CAAQ,MAAR;;EACP,EAAA,GAAO,OAAA,CAAQ,IAAR;;EACP,CAAA,GAAO,OAAA,CAAQ,YAAR;;EAEP,MAAM,CAAC,OAAP;;;aAAiB,MAAA;MACf,WAAa,MAAA,QAAA,EAAmB,QAAnB,CAAA;QAAE,IAAC,CAAA;QAAO,IAAC,CAAA;QACtB,IAAG,OAAO,QAAP,KAAmB,QAAtB;UACE,IAAC,CAAA,QAAD,GAAY;YAAA,QAAA,EAAU;UAAV,EADd;SAAA,MAAA;UAGE,IAAC,CAAA,QAAD,GAAY,QAAA,IAAY,MAAM,CAAC,MAAP,CAAc,CAAA,CAAd,EAAkB,MAAM,CAAC,OAAO,CAAC,QAAjC,EAH1B;;QAKA,IAAC,CAAA,KAAD,GAAS,CAAA;MANE;;MAQb,KAAO,CAAE,YAAF,CAAA;eACL,CAAC,CAAC,QAAF,CAAW,EAAE,CAAC,YAAH,CAAiB,YAAA,GAAe,OAAhC,EAAyC,MAAzC,CAAX,EAA8D,IAAC,CAAA,QAA/D;MADK;;MAGP,OAAS,CAAE,YAAF,EAAgB,IAAhB,CAAA;QACP,YAAA,GAAe,IAAI,CAAC,IAAL,CAAU,IAAC,CAAA,KAAX,EAAkB,YAAlB;QAEf,IAAA,CAAA,CAAO,YAAA,IAAgB,IAAC,CAAA,KAAxB,CAAA;UACE,IAAC,CAAA,KAAO,CAAA,YAAA,CAAR,GAAyB,IAAC,CAAA,KAAD,CAAO,YAAP,EAD3B;;eAGA,IAAC,CAAA,KAAO,CAAA,YAAA,CAAc,CAAC,IAAvB,CAA4B,IAA5B,EAAkC,IAAlC;MANO;;MAQT,MAAQ,CAAE,YAAF,EAAgB,IAAhB,CAAA;QACN,IAAI,CAAC,OAAL,GAAe,IAAC,CAAA,OAAD,CAAS,YAAT,EAAuB,IAAvB;eACf,IAAC,CAAA,OAAD,CAAS,IAAC,CAAA,MAAV,EAAkB,IAAlB;MAFM;;IApBO;;IAwBf,MAAC,CAAA,QAAD,GACE;MAAA,QAAA,EAAU;IAAV;;;;;AAjCJ",
  "sourcesContent": [
    "# Based on JSDoc template.js\n\n'use strict'\n\npath = require 'path'\nfs   = require 'fs'\n_    = require 'underscore'\n\nmodule.exports = class\n  constructor: ( @scope, @layout, settings ) ->\n    if typeof settings is 'string'\n      @settings = variable: settings\n    else\n      @settings = settings or Object.assign {}, module.exports.settings\n\n    @cache = {}\n\n  _load: ( templatePath ) ->\n    _.template fs.readFileSync( templatePath + '.tmpl', 'utf8' ), @settings\n\n  partial: ( templatePath, data ) ->\n    templatePath = path.join @scope, templatePath\n\n    unless templatePath of @cache\n      @cache[ templatePath ] = @_load templatePath\n\n    @cache[ templatePath ].call this, data\n\n  render: ( templatePath, data ) ->\n    data.content = @partial templatePath, data\n    @partial @layout, data\n\n  @settings:\n    variable: 'data'\n"
  ]
}