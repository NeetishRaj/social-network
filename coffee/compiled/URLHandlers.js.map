{
  "version": 3,
  "file": "URLHandlers.js",
  "sourceRoot": "../..",
  "sources": [
    "coffee/URLHandlers.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA,EAAA,EAAA;;EAEA,IAAA,GAAO,OAAA,CAAQ,MAAR;;EACP,EAAA,GAAO,OAAA,CAAQ,IAAR;;EAEP,MAAM,CAAC,OAAP,GAAiB,MAAA;IACf,WAAa,CAAA,CAAA;MACX,IAAC,CAAA,QAAD,GAAY;IADD;;IAGb,GAAK,CAAE,MAAF,EAAU,OAAV,EAAmB,OAAnB,CAAA;AACH,UAAA;MAAA,MAAA,GAAS;MAET,IAAG,OAAO,OAAP,KAAkB,QAArB;QACE,OAAA,GAAU,OAAO,CAAC,OAAR,CAAgB,uBAAhB,EAAyC,QAAA,CAAE,CAAF,EAAK,CAAL,CAAA;UACjD,IAAG,CAAE,MAAM,CAAC,OAAP,CAAe,CAAf,CAAL;YACE,MAAM,KAAA,CAAM,gCAAA,GAAmC,CAAzC,EADR;;UAGA,MAAM,CAAC,IAAP,CAAY,CAAZ;AAEA,iBAAO;QAN0C,CAAzC;QAQV,OAAA,GAAU,MAAA,CAAO,GAAA,GAAM,OAAN,GAAgB,KAAvB,EATZ;;MAWA,IAAC,CAAA,QAAQ,CAAC,IAAV,CAAe,CAAE,MAAF,EAAU,OAAV,EAAmB,OAAnB,EAA4B,MAA5B,CAAf;AAEA,aAAO;IAhBJ;;IAkBL,MAAQ,CAAE,GAAF,EAAO,GAAP,CAAA;AACN,UAAA,OAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,GAAA,EAAA;AAAA;MAAA,KAAA,qCAAA;SAAI,CAAE,MAAF,EAAU,OAAV,EAAmB,OAAnB,EAA4B,MAA5B;QACF,IAAA,CAAA,CAAO,MAAA,KAAU,GAAG,CAAC,MAAd,IAAyB,CAAE,KAAA,GAAQ,OAAO,CAAC,IAAR,CAAa,GAAG,CAAC,GAAjB,CAAV,CAAhC,CAAA;AACE,mBADF;;QAGA,GAAG,CAAC,MAAJ,GAAa,CAAA;QAEb,KAAS,6FAAT;UACE,GAAG,CAAC,MAAQ,CAAA,MAAQ,CAAA,CAAA,CAAR,CAAZ,GAA4B,KAAO,CAAA,CAAA,GAAI,CAAJ;QADrC;AAGA,eAAO;MATT;IADM;;EAtBO;;EAkCjB,MAAM,CAAC,OAAO,CAAC,MAAf,GAAwB,QAAA,CAAE,KAAF,CAAA;WACtB,QAAA,CAAE,GAAF,EAAO,GAAP,CAAA;AACE,UAAA,OAAA,EAAA;MAAA,GAAA,GAAM,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,GAAG,CAAC,GAArB;MAEN,IAAG,gBAAgB,CAAC,IAAjB,CAAsB,GAAA,IAAQ,MAAM,CAAC,EAAP,IAAa,IAA3C,CAAH;QACE,OAAA,GAAU;UAAA,cAAA,EAAgB,IAAM,CAAA,MAAM,CAAC,EAAP;QAAtB,EADZ;;aAGA,EAAE,CAAC,MAAH,CAAU,GAAV,EAAe,EAAE,CAAC,SAAS,CAAC,IAAb,GAAoB,EAAE,CAAC,SAAS,CAAC,IAAhD,EAAsD,QAAA,CAAE,GAAF,CAAA;QACpD,IAAG,GAAH;UACE,GAAG,CAAC,SAAJ,CAAc,GAAd,EAAmB,OAAnB;UACA,GAAG,CAAC,GAAJ,CAAA;AACA,iBAHF;;eAKA,EAAE,CAAC,QAAH,CAAY,GAAZ,EAAiB,MAAjB,EAAyB,QAAA,CAAE,GAAF,EAAO,IAAP,CAAA;UACvB,IAAG,GAAH;YACE,GAAG,CAAC,SAAJ,CAAc,GAAd,EAAmB,OAAnB;mBACA,GAAG,CAAC,GAAJ,CAAA,EAFF;WAAA,MAAA;YAIE,GAAG,CAAC,SAAJ,CAAc,GAAd,EAAmB,OAAnB;mBACA,GAAG,CAAC,GAAJ,CAAQ,IAAR,EALF;;QADuB,CAAzB;MANoD,CAAtD;IANF;EADsB;AAvCxB",
  "sourcesContent": [
    "'use strict'\n\npath = require 'path'\nfs   = require 'fs'\n\nmodule.exports = class\n  constructor: ->\n    @handlers = []\n\n  add: ( method, pattern, handler ) ->\n    params = []\n\n    if typeof pattern is 'string'\n      pattern = pattern.replace /:([_a-z][_a-z0-9]*)/gi, ( a, b ) ->\n        if ~ params.indexOf b\n          throw Error 'You have the same param name: ' + b\n\n        params.push b\n\n        return '([^/]+?)'\n\n      pattern = RegExp '^' + pattern + '/?$'\n\n    @handlers.push { method, pattern, handler, params }\n\n    return this\n\n  handle: ( req, res ) ->\n    for { method, pattern, handler, params } in @handlers\n      unless method is req.method and ( match = pattern.exec req.url )\n        continue\n\n      req.params = {}\n\n      for i in [ 0 ... params.length ]\n        req.params[ params[ i ] ] = match[ i + 1 ]\n\n      return handler\n\nmodule.exports.static = ( scope ) ->\n  ( req, res ) ->\n    url = path.join scope, req.url\n\n    if /\\.([a-z\\-]+)$/i.exec url and RegExp.$1 of mime\n      headers = 'Content-Type': mime[ RegExp.$1 ]\n\n    fs.access url, fs.constants.F_OK | fs.constants.R_OK, ( err ) ->\n      if err\n        res.writeHead 404, headers\n        res.end()\n        return\n\n      fs.readFile url, 'utf8', ( err, data ) ->\n        if err\n          res.writeHead 404, headers\n          res.end()\n        else\n          res.writeHead 200, headers\n          res.end data"
  ]
}